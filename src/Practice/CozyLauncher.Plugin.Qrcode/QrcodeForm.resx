<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="qrCodeImgControl1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xbllNQAAAABJRU5ErkJggg==
</value>
  </data>
</root>